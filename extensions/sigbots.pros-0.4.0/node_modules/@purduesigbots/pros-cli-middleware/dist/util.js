"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var os_1 = require("os");
var child_process_1 = require("child_process");
var util_1 = require("util");
var events_1 = require("events");
var pExec = util_1.promisify(child_process_1.exec);
var PREFIX = 'Uc&42BWAaQ';
var cliVersion = undefined;
exports.getVersion = function () { return __awaiter(_this, void 0, void 0, function () {
    var raw, _i, _a, line, data;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0:
                if (!(cliVersion === undefined)) return [3 /*break*/, 2];
                return [4 /*yield*/, pExec('prosv5 --machine-output --version')];
            case 1:
                raw = _b.sent();
                raw = (typeof raw === 'string') ? raw : raw.stdout;
                for (_i = 0, _a = raw.split(os_1.EOL); _i < _a.length; _i++) {
                    line = _a[_i];
                    if (!line.startsWith(PREFIX)) {
                        console.error(line);
                        continue;
                    }
                    data = JSON.parse(line.substr(PREFIX.length));
                    if (data.hasOwnProperty("text")) {
                        cliVersion = data.text.trim();
                        break;
                    }
                }
                _b.label = 2;
            case 2: return [2 /*return*/, cliVersion];
        }
    });
}); };
// read data from stdout of a cmd and emit it to handler
var CLIEmitter = /** @class */ (function (_super) {
    __extends(CLIEmitter, _super);
    function CLIEmitter(cmd, opts, cwd) {
        var _this = _super.call(this) || this;
        _this.cmd = cmd;
        _this.opts = opts;
        _this.cwd = cwd;
        _this.suppressExit = false;
        _this.invokeCommand();
        return _this;
    }
    CLIEmitter.prototype.invokeCommand = function () {
        var _this = this;
        var procOpts;
        if (this.cwd) {
            procOpts = { cwd: this.cwd, shell: true };
        }
        else {
            procOpts = { shell: true };
        }
        this.proc = child_process_1.spawn(this.cmd, ['--machine-output'].concat(this.opts), procOpts);
        this.proc.stdout.setEncoding('utf-8');
        this.proc.stdout.on('data', function (data) {
            for (var _i = 0, _a = data.split(/\r?\n/); _i < _a.length; _i++) {
                var e = _a[_i];
                if (e.startsWith(PREFIX)) {
                    try {
                        var jdata = JSON.parse(e.substr(PREFIX.length));
                        var primary = jdata.type.split('/')[0];
                        _this.emit(primary, jdata);
                    }
                    catch (error) {
                        console.error(error);
                        console.error("Crashing while parsing \"" + e + "\"");
                        // Not throwing error to stop error modals from showing on macos
                        // throw error;
                    }
                }
                else if (e.trim()) {
                    console.log(e);
                }
            }
        });
        this.proc.stderr.on('data', function (data) { return console.error(data.toString()); });
        this.proc.on('close', function (code) { return _this.emit('exit', code); });
    };
    return CLIEmitter;
}(events_1.EventEmitter));
exports.CLIEmitter = CLIEmitter;
// fire callbacks as emitter emits events
exports.cliHook = function (emitter, callbacks) {
    var makeArgs = function (d) {
        return {
            d: d,
            output: function (c) {
                console.log(c + "\n");
                return emitter.proc.stdin.write(c + "\n");
            },
            kill: function () {
                // suppress reject callback when CLI exits to prevent users
                // from getting notified about it (purduesigbots/pros-cli-middeware#5)
                emitter.suppressExit = true;
                if (os_1.platform() === 'win32') {
                    child_process_1.exec("taskkill /pid " + emitter.proc.pid + " /T /F");
                }
                else {
                    emitter.proc.kill();
                }
            }
        };
    };
    emitter.on('notify', function (d) { return callbacks.notify(makeArgs(d)); });
    emitter.on('log', function (d) { return callbacks.log(makeArgs(d)); });
    emitter.on('finalize', function (d) { return callbacks.finalize(makeArgs(d)); });
    emitter.on('prompt', function (d) { return callbacks.prompt(makeArgs(d)); });
    emitter.on('input', function (d) { return callbacks.input(makeArgs(d)); });
    emitter.on('wakeme', function (d) { return emitter.proc.stdin.write('\n'); });
    return new Promise(function (resolve, reject) { return emitter.on('exit', function (code) { return code === 0 || emitter.suppressExit ? resolve(code) : reject(code); }); });
};
exports.argSwitch = function (argName, yes, no, value) {
    var rStr;
    if (value === undefined) {
        rStr = '';
    }
    else {
        if (argName) {
            argName = "" + argName;
        }
        var prefix = '';
        if (value && yes) {
            prefix = yes + "-";
        }
        else if (!value && no) {
            prefix = no + "-";
        }
        rStr = "--" + prefix + argName;
    }
    return rStr;
};
//# sourceMappingURL=util.js.map
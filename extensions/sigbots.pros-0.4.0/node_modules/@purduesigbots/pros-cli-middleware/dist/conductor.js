"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var semver_1 = require("semver");
var util_1 = require("./util");
exports.applyTemplate = function (callbacks, path, query, _a) {
    var _b = _a === void 0 ? {} : _a, upgrade = _b.upgrade, install = _b.install, download = _b.download, user = _b.user, system = _b.system;
    var upgradeStr = util_1.argSwitch('upgrade', '', 'no', upgrade);
    var installStr = util_1.argSwitch('install', '', 'no', install);
    var downloadStr = util_1.argSwitch('download', '', 'no', download);
    var userStr = util_1.argSwitch('upgrade-user-files', '', 'no', user);
    var systemStr = system === undefined ? '' : '--force';
    return util_1.cliHook(new util_1.CLIEmitter('prosv5', [
        'c', 'apply',
        upgradeStr, installStr, downloadStr, userStr, systemStr,
        query
    ].filter(function (e) { return e !== ''; }), path), callbacks);
};
exports.fetchTemplate = function (callbacks, query) {
    return util_1.cliHook(new util_1.CLIEmitter('prosv5', [
        'c', 'fetch', query
    ]), callbacks);
};
exports.listTemplates = function (callbacks, query, _a) {
    var _b = _a === void 0 ? {} : _a, offline = _b.offline, online = _b.online, refresh = _b.refresh, limit = _b.limit, target = _b.target;
    return __awaiter(_this, void 0, void 0, function () {
        var offlineStr, onlineStr, refreshStr, cliVersion, targetStr;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    offlineStr = util_1.argSwitch('offline', 'allow', 'no', offline);
                    onlineStr = util_1.argSwitch('online', 'allow', 'no', online);
                    refreshStr = refresh === undefined ? '' : "" + (refresh ? '--force-refresh' : '');
                    return [4 /*yield*/, util_1.getVersion()];
                case 1:
                    cliVersion = _c.sent();
                    targetStr = '';
                    if (semver_1.gte(cliVersion, '3.0.8')) {
                        targetStr = "" + (target ? '--target ' + target : '');
                    }
                    return [2 /*return*/, util_1.cliHook(new util_1.CLIEmitter('prosv5', [
                            'c', 'ls-templates',
                            "" + (query || ''),
                            offlineStr, onlineStr, refreshStr,
                            targetStr,
                            "" + (limit ? '--limit ' + limit : '')
                        ].filter(function (e) { return e !== ''; })), callbacks)];
            }
        });
    });
};
exports.purgeTemplate = function (callbacks, query, _a) {
    var force = (_a === void 0 ? {} : _a).force;
    var forceStr = force === undefined ? '' : "" + (force ? '--force' : '');
    return util_1.cliHook(new util_1.CLIEmitter('prosv5', [
        'c', 'p', forceStr
    ].filter(function (e) { return e !== ''; })), callbacks);
};
exports.getProjectInfo = function (callbacks, path, _a) {
    var upgrades = (_a === void 0 ? {} : _a).upgrades;
    var upgradeStr = util_1.argSwitch('ls-upgrades', '', 'no', upgrades);
    return util_1.cliHook(new util_1.CLIEmitter('prosv5', [
        'c', 'info-project', upgradeStr
    ].filter(function (e) { return e !== ''; }), path), callbacks);
};
exports.createNewProject = function (callbacks, path, version, platform, _a) {
    if (platform === void 0) { platform = 'v5'; }
    var _b = _a === void 0 ? {} : _a, user = _b.user, system = _b.system, refresh = _b.refresh, compile = _b.compile, cache = _b.cache;
    return __awaiter(_this, void 0, void 0, function () {
        var userStr, systemStr, refreshStr, cliVersion, compileStr, cacheStr;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    userStr = user === undefined ? '' : "" + (user ? '--force-user' : '');
                    systemStr = system === undefined ? '' : "" + (system ? '--force-system' : '');
                    refreshStr = refresh === undefined ? '' : "" + (refresh ? '--force-refresh' : '');
                    return [4 /*yield*/, util_1.getVersion()];
                case 1:
                    cliVersion = _c.sent();
                    compileStr = '';
                    cacheStr = '';
                    if (semver_1.gte(cliVersion, '3.0.8')) {
                        compileStr = compile === undefined ? '' : "" + (compile ? '--compile-after' : '');
                        cacheStr = cache === undefined ? '' : "" + (cache ? '--build-cache' : '');
                    }
                    return [2 /*return*/, util_1.cliHook(new util_1.CLIEmitter('prosv5', [
                            'c', 'n',
                            userStr, systemStr, refreshStr, compileStr, cacheStr,
                            path, platform, version
                        ].filter(function (e) { return e !== ''; })), callbacks)];
            }
        });
    });
};
exports.upgradeProject = function (callbacks, path, version, _a) {
    var _b = _a === void 0 ? {} : _a, install = _b.install, download = _b.download, user = _b.user, system = _b.system;
    var installStr = util_1.argSwitch('install', '', 'no', install);
    var downloadStr = util_1.argSwitch('download', '', 'no', download);
    var userStr = user === undefined ? '' : "" + (user ? '--force-user' : '');
    var systemStr = system === undefined ? '' : "" + (system ? '--force-system' : '');
    return util_1.cliHook(new util_1.CLIEmitter('prosv5', [
        'c', 'u',
        version,
        installStr, downloadStr,
        userStr, systemStr
    ].filter(function (e) { return e !== ''; }), path), callbacks);
};
//# sourceMappingURL=conductor.js.map
"use strict";
// TODO: this has made me rethink how we should be exporting functions, as these
//       functions don't make much sense as package-level functions (rather it
//       might be more idiomatically correct to call something like
//       v5.listFiles()). alternatively, index.ts could be removed, and users of
//       this package would have to
//       import { listFiles } from '@purduesigbots/pros-cli-middleware/v5'
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("./util");
exports.listFiles = function (callbacks, port) {
    return util_1.cliHook(new util_1.CLIEmitter('prosv5', [
        'v5', 'ls-files', port || ''
    ]), callbacks);
};
exports.removeAll = function (callbacks, port) {
    return util_1.cliHook(new util_1.CLIEmitter('prosv5', [
        'v5', 'rm-all', port || ''
    ]), callbacks);
};
exports.removeFile = function (callbacks, file, _a, port) {
    var all = (_a === void 0 ? {} : _a).all;
    var allStr;
    if (all === undefined) {
        allStr = '';
    }
    else {
        allStr = "" + (all ? '--erase-all' : '--erase-only');
    }
    return util_1.cliHook(new util_1.CLIEmitter('prosv5', [
        'v5', 'rm-file', allStr, port || ''
    ].filter(function (e) { return e !== ''; })), callbacks);
};
// TODO: this function can also take a CWD, in which case file can be omitted as the CLI attempts to find the proper
//       filename from the CWD's PROS project. determine how this should be handled
exports.runProgram = function (callbacks, file, port) {
    return util_1.cliHook(new util_1.CLIEmitter('prosv5', [
        'v5', 'run', file || '', port || ''
    ].filter(function (e) { return e !== ''; })), callbacks);
};
exports.systemStatus = function (callbacks, port) {
    return util_1.cliHook(new util_1.CLIEmitter('prosv5', [
        'v5', 'status', port || ''
    ].filter(function (e) { return e !== ''; })), callbacks);
};
// TODO: same as above
exports.stopProgram = function (callbacks, file, port) {
    return util_1.cliHook(new util_1.CLIEmitter('prosv5', [
        'v5', 'stop', file || '', port || ''
    ].filter(function (e) { return e !== ''; })), callbacks);
};
//# sourceMappingURL=v5.js.map